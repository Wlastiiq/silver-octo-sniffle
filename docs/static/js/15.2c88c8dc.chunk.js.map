{"version":3,"sources":["services/encodings.ts","containers/CSVParser/services.ts","containers/CSVParser/styled.ts","containers/CSVParser/index.tsx","hooks/useSyntaxHighlightTheme.ts","services/file-utils.ts"],"names":["FILE_ENCODING_LABELS_SORTED","encodings","labels","name","heading","flatMap","entry","encoding","sort","DEFAULT_OPTIONS","delimiter","newline","undefined","quoteChar","escapeChar","header","transformHeader","index","trim","dynamicTyping","preview","worker","comments","step","complete","error","download","downloadRequestHeaders","downloadRequestBody","skipEmptyLines","chunk","chunkSize","fastMode","beforeFirstChunk","withCredentials","transform","delimitersToGuess","Papa","RECORD_SEP","UNIT_SEP","csvData","a","options","csvOptions","_index","parse","useStyles","makeStyles","theme","root","margin","spacing","fileSelector","textAlign","formControl","marginLeft","marginRight","minWidth","inputField","fontFamily","fontSize","whiteSpace","overflowY","toolbar","padding","encodedResult","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","wordBreak","mapStateToProps","state","inputText","textInputs","inputEncoding","inputOptions","mapDispatchToProps","dispatch","storeInputText","value","setTextAction","connect","withWidth","props","title","classes","syntaxTheme","useSyntaxHighlightTheme","React","useState","transformed","setTransformed","rawParsedResult","setRawParsedResult","fileInfo","setFileInfo","isRunning","setIsRunning","isMdUp","isWidthUp","width","displayedRowsCount","useEffect","opts","JSON","services","result","stringify","data","Helmet","className","FeatureTitle","iconType","CSVParserIcon","Toolbar","Box","display","flexGrow","type","color","accept","onChange","e","target","files","length","file","reader","FileReader","onload","ev","size","readAsText","onFileSelected","id","style","htmlFor","Button","variant","component","FormControl","InputLabel","shrink","Select","labelId","autoFocus","map","label","MenuItem","FormHelperText","noValidate","autoComplete","Grid","container","item","md","sm","xs","TextField","helperText","multiline","minRows","maxRows","inputProps","fullWidth","Link","rel","href","endIcon","onClick","event","preventDefault","CopyButton","fileService","Typography","language","usePreferenceTheme","isDark","dark","docco","saveJsonAs","jsonContent","window","require","ipcRenderer","send","blob","Blob","saveAs"],"mappings":"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","file":"static/js/15.2c88c8dc.chunk.js","sourcesContent":["export const FILE_ENCODING_ENTRIES = [\n    {\n        encodings: [{\n            labels: ['unicode-1-1-utf-8', 'unicode11utf8', 'unicode20utf8', 'utf-8', 'utf8', 'x-unicode20utf8'],\n            name: 'UTF-8'\n        }],\n        heading: 'The Encoding'\n    }, {\n        encodings: [{\n            labels: ['866', 'cp866', 'csibm866', 'ibm866'],\n            name: 'IBM866'\n        }, {\n            labels: ['csisolatin2', 'iso-8859-2', 'iso-ir-101', 'iso8859-2', 'iso88592', 'iso_8859-2', 'iso_8859-2:1987', 'l2', 'latin2'],\n            name: 'ISO-8859-2'\n        }, {\n            labels: ['csisolatin3', 'iso-8859-3', 'iso-ir-109', 'iso8859-3', 'iso88593', 'iso_8859-3', 'iso_8859-3:1988', 'l3', 'latin3'],\n            name: 'ISO-8859-3'\n        }, {\n            labels: ['csisolatin4', 'iso-8859-4', 'iso-ir-110', 'iso8859-4', 'iso88594', 'iso_8859-4', 'iso_8859-4:1988', 'l4', 'latin4'],\n            name: 'ISO-8859-4'\n        }, {\n            labels: ['csisolatincyrillic', 'cyrillic', 'iso-8859-5', 'iso-ir-144', 'iso8859-5', 'iso88595', 'iso_8859-5', 'iso_8859-5:1988'],\n            name: 'ISO-8859-5'\n        }, {\n            labels: ['arabic', 'asmo-708', 'csiso88596e', 'csiso88596i', 'csisolatinarabic', 'ecma-114', 'iso-8859-6', 'iso-8859-6-e', 'iso-8859-6-i', 'iso-ir-127', 'iso8859-6', 'iso88596', 'iso_8859-6', 'iso_8859-6:1987'],\n            name: 'ISO-8859-6'\n        }, {\n            labels: ['csisolatingreek', 'ecma-118', 'elot_928', 'greek', 'greek8', 'iso-8859-7', 'iso-ir-126', 'iso8859-7', 'iso88597', 'iso_8859-7', 'iso_8859-7:1987', 'sun_eu_greek'],\n            name: 'ISO-8859-7'\n        }, {\n            labels: ['csiso88598e', 'csisolatinhebrew', 'hebrew', 'iso-8859-8', 'iso-8859-8-e', 'iso-ir-138', 'iso8859-8', 'iso88598', 'iso_8859-8', 'iso_8859-8:1988', 'visual'],\n            name: 'ISO-8859-8'\n        }, {\n            labels: ['csiso88598i', 'iso-8859-8-i', 'logical'],\n            name: 'ISO-8859-8-I'\n        }, {\n            labels: ['csisolatin6', 'iso-8859-10', 'iso-ir-157', 'iso8859-10', 'iso885910', 'l6', 'latin6'],\n            name: 'ISO-8859-10'\n        }, {\n            labels: ['iso-8859-13', 'iso8859-13', 'iso885913'],\n            name: 'ISO-8859-13'\n        }, {\n            labels: ['iso-8859-14', 'iso8859-14', 'iso885914'],\n            name: 'ISO-8859-14'\n        }, {\n            labels: ['csisolatin9', 'iso-8859-15', 'iso8859-15', 'iso885915', 'iso_8859-15', 'l9'],\n            name: 'ISO-8859-15'\n        }, {\n            labels: ['iso-8859-16'],\n            name: 'ISO-8859-16'\n        }, {\n            labels: ['cskoi8r', 'koi', 'koi8', 'koi8-r', 'koi8_r'],\n            name: 'KOI8-R'\n        }, {\n            labels: ['koi8-ru', 'koi8-u'],\n            name: 'KOI8-U'\n        }, {\n            labels: ['csmacintosh', 'mac', 'macintosh', 'x-mac-roman'],\n            name: 'macintosh'\n        }, {\n            labels: ['dos-874', 'iso-8859-11', 'iso8859-11', 'iso885911', 'tis-620', 'windows-874'],\n            name: 'windows-874'\n        }, {\n            labels: ['cp1250', 'windows-1250', 'x-cp1250'],\n            name: 'windows-1250'\n        }, {\n            labels: ['cp1251', 'windows-1251', 'x-cp1251'],\n            name: 'windows-1251'\n        }, {\n            labels: ['ansi_x3.4-1968', 'ascii', 'cp1252', 'cp819', 'csisolatin1', 'ibm819', 'iso-8859-1', 'iso-ir-100', 'iso8859-1', 'iso88591', 'iso_8859-1', 'iso_8859-1:1987', 'l1', 'latin1', 'us-ascii', 'windows-1252', 'x-cp1252'],\n            name: 'windows-1252'\n        }, {\n            labels: ['cp1253', 'windows-1253', 'x-cp1253'],\n            name: 'windows-1253'\n        }, {\n            labels: ['cp1254', 'csisolatin5', 'iso-8859-9', 'iso-ir-148', 'iso8859-9', 'iso88599', 'iso_8859-9', 'iso_8859-9:1989', 'l5', 'latin5', 'windows-1254', 'x-cp1254'],\n            name: 'windows-1254'\n        }, {\n            labels: ['cp1255', 'windows-1255', 'x-cp1255'],\n            name: 'windows-1255'\n        }, {\n            labels: ['cp1256', 'windows-1256', 'x-cp1256'],\n            name: 'windows-1256'\n        }, {\n            labels: ['cp1257', 'windows-1257', 'x-cp1257'],\n            name: 'windows-1257'\n        }, {\n            labels: ['cp1258', 'windows-1258', 'x-cp1258'],\n            name: 'windows-1258'\n        }, {\n            labels: ['x-mac-cyrillic', 'x-mac-ukrainian'],\n            name: 'x-mac-cyrillic'\n        }],\n        heading: 'Legacy single-byte encodings'\n    }, {\n        encodings: [{\n            labels: ['chinese', 'csgb2312', 'csiso58gb231280', 'gb2312', 'gb_2312', 'gb_2312-80', 'gbk', 'iso-ir-58', 'x-gbk'],\n            name: 'GBK'\n        }, {\n            labels: ['gb18030'],\n            name: 'gb18030'\n        }],\n        heading: 'Legacy multi-byte Chinese (simplified) encodings'\n    }, {\n        encodings: [{\n            labels: ['big5', 'big5-hkscs', 'cn-big5', 'csbig5', 'x-x-big5'],\n            name: 'Big5'\n        }],\n        heading: 'Legacy multi-byte Chinese (traditional) encodings'\n    }, {\n        encodings: [{\n            labels: ['cseucpkdfmtjapanese', 'euc-jp', 'x-euc-jp'],\n            name: 'EUC-JP'\n        }, {\n            labels: ['csiso2022jp', 'iso-2022-jp'],\n            name: 'ISO-2022-JP'\n        }, {\n            labels: ['csshiftjis', 'ms932', 'ms_kanji', 'shift-jis', 'shift_jis', 'sjis', 'windows-31j', 'x-sjis'],\n            name: 'Shift_JIS'\n        }],\n        heading: 'Legacy multi-byte Japanese encodings'\n    }, {\n        encodings: [{\n            labels: ['cseuckr', 'csksc56011987', 'euc-kr', 'iso-ir-149', 'korean', 'ks_c_5601-1987', 'ks_c_5601-1989', 'ksc5601', 'ksc_5601', 'windows-949'],\n            name: 'EUC-KR'\n        }],\n        heading: 'Legacy multi-byte Korean encodings'\n    }, {\n        encodings: [{\n            labels: ['csiso2022kr', 'hz-gb-2312', 'iso-2022-cn', 'iso-2022-cn-ext', 'iso-2022-kr', 'replacement'],\n            name: 'replacement'\n        }, {\n            labels: ['unicodefffe', 'utf-16be'],\n            name: 'UTF-16BE'\n        }, {\n            labels: ['csunicode', 'iso-10646-ucs-2', 'ucs-2', 'unicode', 'unicodefeff', 'utf-16', 'utf-16le'],\n            name: 'UTF-16LE'\n        }, {\n            labels: ['x-user-defined'],\n            name: 'x-user-defined'\n        }],\n        heading: 'Legacy miscellaneous encodings'\n    }];\n\nexport const FILE_ENCODING_LABELS = FILE_ENCODING_ENTRIES.flatMap(entry => entry.encodings.flatMap(encoding => encoding.labels));\nexport const FILE_ENCODING_LABELS_SORTED = FILE_ENCODING_LABELS.sort();\n","import Papa, { ParseConfig, ParseResult } from 'papaparse';\n\nexport const DEFAULT_OPTIONS: any = {\n\tdelimiter: '',\t// auto-detect\n\tnewline: undefined,\t// auto-detect\n\tquoteChar: '\"',\n\tescapeChar: '\"',\n\theader: true,\n\ttransformHeader: (header: string, index: number) => header?.trim(),\n\tdynamicTyping: true,\n\tpreview: 0,\n\tencoding: undefined,\n\tworker: false,\n\tcomments: false,\n\tstep: undefined,\n\tcomplete: undefined,\n\terror: undefined,\n\tdownload: false,\n\tdownloadRequestHeaders: undefined,\n\tdownloadRequestBody: undefined,\n\tskipEmptyLines: true,\n\tchunk: undefined,\n\tchunkSize: undefined,\n\tfastMode: undefined,\n\tbeforeFirstChunk: undefined,\n\twithCredentials: undefined,\n\ttransform: undefined,\n\tdelimitersToGuess: [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP]\n};\n\nexport const OPTIONS_DOC_URL = 'https://www.papaparse.com/docs#config';\n\ntype ParseConfigType = ParseConfig<any> & { download?: false | undefined; worker?: false | undefined };\n\n// @see https://www.papaparse.com/docs#config\nexport async function transform(csvData: string, options: ParseConfigType = DEFAULT_OPTIONS): Promise<ParseResult<any>> {\n\tconst csvOptions = {\n\t\t...options,\n\t\ttransformHeader: (header: string, _index: number) => header?.trim(),\n\t };\n\n    return Papa.parse(csvData, csvOptions);\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    fileSelector: {\n        margin: theme.spacing(2),\n        textAlign: 'center',\n    },\n    formControl: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: 120,\n    },\n    inputField: {\n        fontFamily: 'monospace',\n        fontSize: '0.8em',\n        whiteSpace: 'nowrap',\n        overflowY: 'scroll',\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n        '& > *': {\n            marginLeft: theme.spacing(1),\n        },\n    },\n    encodedResult: {\n        padding: theme.spacing(1),\n        borderColor: theme.palette.text.disabled,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n    },\n}));\n","import {\n  Box,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  isWidthUp,\n  Link,\n  MenuItem,\n  Select,\n  TextField,\n  Toolbar,\n  Typography,\n  withWidth,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {Breakpoint} from '@material-ui/core/styles/createBreakpoints';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport FileIcon from '@material-ui/icons/AttachmentOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CSVParserIcon from '@material-ui/icons/GridOn';\nimport SaveIcon from '@material-ui/icons/Save';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {connect} from 'react-redux';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {Dispatch} from 'redux';\nimport {setTextAction} from '../../actions/text-actions';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport {useSyntaxHighlightTheme} from '../../hooks/useSyntaxHighlightTheme';\nimport {AppState} from '../../reducers';\nimport {FILE_ENCODING_LABELS_SORTED} from '../../services/encodings';\nimport * as fileService from '../../services/file-utils';\nimport * as services from './services';\nimport {useStyles} from './styled';\n\ninterface Props {\n  width: Breakpoint;\n  inputText?: string;\n  inputEncoding?: string;\n  inputOptions?: string;\n  storeInputText: (name: string, value: string) => void;\n}\n\nconst CSVParser: React.FC<Props> = (props: Props) => {\n  const title = 'CSV parser';\n  const classes = useStyles();\n  const syntaxTheme = useSyntaxHighlightTheme();\n  const {inputText, inputEncoding, inputOptions, storeInputText} = props;\n  const [transformed, setTransformed] = React.useState('');\n  const [rawParsedResult, setRawParsedResult] = React.useState('');\n  const [fileInfo, setFileInfo] = React.useState('');\n  const [isRunning, setIsRunning] = React.useState(false);\n  const isMdUp = isWidthUp('md', props.width);\n  const displayedRowsCount = isMdUp ? 10 : 4;\n\n  const handleSaveAs = (event: any) => {\n    event.preventDefault();\n    fileService.saveJsonAs(transformed);\n  };\n\n  function handleClear(event: any) {\n    event.preventDefault();\n    setTransformed('');\n    setRawParsedResult('');\n    setFileInfo('');\n    storeInputText('lastCSVInputContent', '');\n  }\n\n  function onFileSelected(e: React.ChangeEvent<HTMLInputElement>) {\n    if (!e?.target?.files || e.target.files.length === 0) {\n      return;\n    }\n\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (ev: ProgressEvent<FileReader>) => {\n      storeInputText('lastCSVInputContent', ev.target!.result as string);\n      setFileInfo(`${file.name} (${file.size} bytes)`);\n      e.target.value = '';\n    };\n    reader.readAsText(file, inputEncoding);\n  }\n\n  React.useEffect(() => {\n    async function parse() {\n      try {\n        const opts = inputOptions ? JSON.parse(inputOptions) : services.DEFAULT_OPTIONS;\n        const result = await services.transform(inputText!, opts);\n        setTransformed(JSON.stringify(result.data, null, 2));\n        setRawParsedResult(JSON.stringify(result, null, 2));\n        storeInputText('lastCSVInputOptions', JSON.stringify(opts, null, 2));\n        setIsRunning(false);\n      } catch (e) {\n        setIsRunning(false);\n      }\n    }\n\n    if (isRunning && inputText) {\n      parse();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRunning, inputText]);\n\n  return (\n    <>\n      <Helmet title={title} />\n\n      <div className={classes.root}>\n        <FeatureTitle iconType={CSVParserIcon} title={title} />\n\n        <Toolbar className={classes.toolbar}>\n          <Box display=\"flex\" flexGrow={1}></Box>\n          <div>\n            <input\n              type=\"file\"\n              color=\"primary\"\n              accept=\"text/csv\"\n              onChange={e => onFileSelected(e)}\n              id=\"icon-button-file\"\n              style={{display: 'none'}}\n            />\n            <label htmlFor=\"icon-button-file\">\n              <Button variant=\"contained\" component=\"span\" color=\"primary\">\n                File &nbsp; <FileIcon />\n              </Button>\n            </label>\n          </div>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel shrink id=\"encodingLabel\">Encoding</InputLabel>\n            <Select\n              labelId=\"encodingLabel\"\n              id=\"encoding\"\n              value={inputEncoding}\n              autoFocus={isMdUp}\n              onChange={(e: any) => storeInputText('lastCSVInputContentEncoding', e.target.value)}>\n              {FILE_ENCODING_LABELS_SORTED.map((label, index) => (\n                <MenuItem key={`${index}-${label}`} value={label}>\n                  {label}\n                </MenuItem>\n              ))}\n            </Select>\n            <FormHelperText>Specify the file encoding</FormHelperText>\n          </FormControl>\n        </Toolbar>\n\n        <form noValidate autoComplete=\"off\">\n          <Grid container spacing={1}>\n            <Grid item md={8} sm={12} xs={12}>\n              <TextField\n                name=\"inputText\"\n                label=\"CSV Source data\"\n                helperText={fileInfo}\n                multiline\n                minRows={displayedRowsCount}\n                maxRows={displayedRowsCount}\n                variant=\"outlined\"\n                margin=\"normal\"\n                inputProps={{\n                  style: {\n                    fontFamily: 'monospace',\n                    fontSize: '0.8em',\n                    whiteSpace: 'nowrap',\n                    overflowY: 'scroll',\n                  },\n                }}\n                fullWidth={true}\n                value={inputText}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  storeInputText('lastCSVInputContent', e.target.value)\n                }\n              />\n            </Grid>\n            <Grid item md={4} sm={12} xs={12}>\n              <TextField\n                name=\"inputOptions\"\n                label=\"Parser options\"\n                helperText={\n                  <Link target=\"_blank\" rel=\"noreferrer\" href={services.OPTIONS_DOC_URL}>\n                    Options documentation available here!\n                  </Link>\n                }\n                multiline\n                minRows={displayedRowsCount}\n                maxRows={displayedRowsCount}\n                variant=\"outlined\"\n                margin=\"normal\"\n                inputProps={{\n                  style: {\n                    fontFamily: 'monospace',\n                    fontSize: '0.8em',\n                    whiteSpace: 'nowrap',\n                    overflowY: 'scroll',\n                  },\n                }}\n                fullWidth={true}\n                value={inputOptions}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  storeInputText('lastCSVInputOptions', e.target.value)\n                }\n              />\n            </Grid>\n          </Grid>\n        </form>\n\n        <Toolbar className={classes.toolbar}>\n          <Box display=\"flex\" flexGrow={1}></Box>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<AccountTreeIcon>Run</AccountTreeIcon>}\n            disabled={!inputText || isRunning}\n            onClick={() => setIsRunning(true)}>\n            {isRunning ? 'Wait…' : 'Run'}\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" disabled={!inputText} onClick={handleClear}>\n            <DeleteIcon />\n          </Button>\n          <CopyButton data={transformed} />\n          <Button\n            endIcon={<SaveIcon>Save As...</SaveIcon>}\n            disabled={!transformed}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSaveAs}>\n            Save…\n          </Button>\n        </Toolbar>\n\n        {transformed && (\n          <>\n            <Typography>Parsed rows:</Typography>\n            <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.encodedResult}>\n              {transformed}\n            </SyntaxHighlighter>\n            <Typography>Parsed result with metadata:</Typography>\n            <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.encodedResult}>\n              {rawParsedResult}\n            </SyntaxHighlighter>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport function mapStateToProps(state: AppState) {\n  return {\n    inputText: state.textInputs['lastCSVInputContent'],\n    inputEncoding: state.textInputs['lastCSVInputContentEncoding'],\n    inputOptions: state.textInputs['lastCSVInputOptions'],\n  };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(CSVParser));\n","import { usePreferenceTheme } from \"../components/Preferences/PreferencesProvider\";\nimport { docco, dark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const useSyntaxHighlightTheme = () => {\n  const { isDark } = usePreferenceTheme();\n\n  return isDark ? dark : docco;\n};\n","import { saveAs } from 'file-saver';\n\nexport function saveJsonAs(jsonContent: string): void {\n    // Will be defined if the React App is running inside Electron\n    if (window.require) {\n        const ipc = window.require(\"electron\").ipcRenderer;\n        ipc.send('saveJsonAs', jsonContent);\n    } else {\n        var blob = new Blob([jsonContent], { type: 'application/json' });\n        saveAs(blob, 'data.json');\n    }\n}\n"],"sourceRoot":""}